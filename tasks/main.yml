- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include OS-specific setup.
  include: "setup_{{ ansible_os_family }}.yml"

# _apache_version variable was determined during os family specific setup
- name: Create apache_version variable.
  set_fact:
    apache_version: "{{ _apache_version.stdout.split()[2].split('/')[1] }}"

- name: Enable Apache modules required by CONGA role.
  apache2_module:
    name: "{{ item }}"
    state: present
  with_items: "{{ conga_config.httpd.modules }}"
  when: conga_config.httpd is defined and conga_config.httpd.modules is defined
  notify:
    - restart apache

# The CONGA configs still use 2.2 auth syntax so we need to enable the compat module for 2.4+
- name: Enable Apache access_compat module for Apache 2.4.
  apache2_module:
    name: access_compat
    state: present
  when: "apache_version.split('.')[1] >= '4'"
  notify:
    - restart apache

- name: Create cache root directory.
  file:
    path: "{{ conga_config.dispatcher.cache.rootPath }}"
    state: directory
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"

- name: Setup SSL if required by CONGA variant.
  include: setup_ssl.yml
  when: "'ssl' in conga_variants"

# copy all config files but leave out distribution specific files
- name: Copy all CONGA files except vhosts and conf
  include_role:
    name: conga-files
  vars:
    conga_files_base_path: "{{ apache_config_path }}"
    conga_files_handlers: [ restart apache ]
    conga_files_files: "{{ conga_files_paths | select('match', '^(?!(vhosts|conf).d/)') | list }}"
    conga_files_directories: "{{ conga_directories | select('match', '^(?!(vhosts|conf).d)') | list }}"

- name: Enable CONGA sites.
  include: "enable_sites_{{ ansible_os_family }}.yml"
